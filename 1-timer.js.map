{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst startBtn = document.querySelector('.start-btn');\nconst textInput = document.querySelector('#datetime-picker');\n\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      window.alert('Please choose a date in the future');\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\n//===================================================================//\nlet intervalId;\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  textInput.disabled = true;\n\n  intervalId = setInterval(() => {\n    const currentTime = new Date();\n    const differTime = userSelectedDate - currentTime;\n\n    if (differTime <= 0) {\n      clearInterval(intervalId);\n      textInput.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = getTimeComponents(differTime);\n\n    daysSpan.textContent = String(days).padStart(2, '0');\n    hoursSpan.textContent = String(hours).padStart(2, '0');\n    minutesSpan.textContent = String(minutes).padStart(2, '0');\n    secondsSpan.textContent = String(seconds).padStart(2, '0');\n  }, 1000);\n});\n\nfunction getTimeComponents(differTime) {\n  const seconds = Math.floor((differTime / 1000) % 60);\n  const minutes = Math.floor((differTime / 1000 / 60) % 60);\n  const hours = Math.floor((differTime / (1000 * 60 * 60)) % 24);\n  const days = Math.floor(differTime / (1000 * 60 * 60 * 24));\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","textInput","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","options","selectedDates","selectedDate","flatpickr","intervalId","differTime","days","hours","minutes","seconds","getTimeComponents"],"mappings":"oGAGA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,kBAAkB,EAErDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACtB,OAAO,MAAM,oCAAoC,EACjDT,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBM,EAAmBG,EAEtB,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAGrC,IAAII,EAEJX,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBU,EAAa,YAAY,IAAM,CAE7B,MAAMC,EAAaN,EADC,IAAI,KAGxB,GAAIM,GAAc,EAAG,CACnB,cAAcD,CAAU,EACxBV,EAAU,SAAW,GACrB,MACD,CAED,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAkBL,CAAU,EAEtEV,EAAS,YAAc,OAAOW,CAAI,EAAE,SAAS,EAAG,GAAG,EACnDV,EAAU,YAAc,OAAOW,CAAK,EAAE,SAAS,EAAG,GAAG,EACrDV,EAAY,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,GAAG,EACzDV,EAAY,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,GAAG,CAC1D,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAkBL,EAAY,CACrC,MAAMI,EAAU,KAAK,MAAOJ,EAAa,IAAQ,EAAE,EAC7CG,EAAU,KAAK,MAAOH,EAAa,IAAO,GAAM,EAAE,EAClDE,EAAQ,KAAK,MAAOF,GAAc,IAAO,GAAK,IAAO,EAAE,EAG7D,MAAO,CAAE,KAFI,KAAK,MAAMA,GAAc,IAAO,GAAK,GAAK,GAAG,EAE3C,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}